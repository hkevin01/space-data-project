# Rust build artifacts
target/
**/*.rs.bk
*.pdb

# Cargo files
Cargo.lock
!rust-workspace/Cargo.lock

# Rust toolchain
.rustc_info.json

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Data files
data/
*.sqlite
*.db

# Temporary files
tmp/
temp/
*.tmp

# Documentation build
/docs/book/
/docs/target/

# Embedded artifacts
*.bin
*.hex
*.elf
*.map

# Docker
.dockerignore
docker-compose.override.yml

# Mission-specific data
telemetry_logs/
command_history/
satellite_data/

# Test artifacts
coverage/
test-results/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# C/C++ build artifacts
*.o
*.obj
*.exe
*.dll
*.lib
*.a
*.so
*.dylib
build/
cmake_build/
Debug/
Release/
x64/
x86/

# Java
*.class
*.jar
*.war
*.ear
*.nar
target/
.mvn/
mvnw
mvnw.cmd

# IDE files
.vscode/launch.json
.vscode/tasks.json
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Docker
.docker/

# Space data specific
data/raw/
data/processed/temp/
data/telemetry/live/
logs/
*.ccsds.tmp
*.tlm.tmp
simulation_outputs/

# Configuration files with secrets
config/secrets.json
config/api_keys.json
*.pem
*.key
*.cert

# Large data files
*.bin
*.dat
data/large_datasets/
data/archive/

# Temporary analysis files
analysis/temp/
plots/temp/
reports/temp/

# NASA specific formats
*.pds
*.fits.gz
*.hdf5.tmp

# Backup files
*.bak
*.backup
*.old

# Lock files
package-lock.json
yarn.lock
poetry.lock

# Node modules (if any JS tooling)
node_modules/

# Terraform (if used for cloud deployment)
*.tfstate
*.tfstate.*
.terraform/

# Local environment variables
.env.local
.env.development.local
.env.test.local
.env.production.local

# Database
*.db
*.sqlite
*.sqlite3

# Cache directories
.cache/
.npm/
.yarn/

# Coverage reports
coverage/
.nyc_output/

# Linting
.eslintcache

# Editor directories and files
.vscode/settings.json.local
.fleet
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
